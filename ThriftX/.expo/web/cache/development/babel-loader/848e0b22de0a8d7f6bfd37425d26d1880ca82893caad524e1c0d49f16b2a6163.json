{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { StatusBar } from \"expo-status-bar\";\nimport { SafeAreaProvider } from \"react-native-safe-area-context\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport React, { useEffect, useState } from \"react\";\nimport AppNavigator from \"./navigation/AppNavigator\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function App() {\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    initialRoute = _useState2[0],\n    setInitialRoute = _useState2[1];\n  useEffect(function () {\n    var checkIntroStatus = function () {\n      var _ref = _asyncToGenerator(function* () {\n        try {\n          var hasSeenIntro = yield AsyncStorage.getItem(\"hasSeenIntro\");\n          setInitialRoute(hasSeenIntro === \"true\" ? \"Login\" : \"Intro\");\n        } catch (error) {\n          console.error(\"Error checking intro status:\", error);\n          setInitialRoute(\"Intro\");\n        }\n      });\n      return function checkIntroStatus() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n    checkIntroStatus();\n  }, []);\n  if (!initialRoute) return null;\n  return _jsx(SafeAreaProvider, {\n    children: _jsxs(NavigationContainer, {\n      children: [_jsx(AppNavigator, {\n        initialRoute: initialRoute\n      }), _jsx(StatusBar, {\n        style: \"auto\"\n      })]\n    })\n  });\n}","map":{"version":3,"names":["StatusBar","SafeAreaProvider","NavigationContainer","AsyncStorage","React","useEffect","useState","AppNavigator","jsx","_jsx","jsxs","_jsxs","App","_useState","_useState2","_slicedToArray","initialRoute","setInitialRoute","checkIntroStatus","_ref","_asyncToGenerator","hasSeenIntro","getItem","error","console","apply","arguments","children","style"],"sources":["/home/alan/Desktop/ThriftX/App.js"],"sourcesContent":["import { StatusBar } from \"expo-status-bar\";\nimport { SafeAreaProvider } from \"react-native-safe-area-context\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport React, { useEffect, useState } from \"react\";\nimport AppNavigator from \"./navigation/AppNavigator\";\n\nexport default function App() {\n  const [initialRoute, setInitialRoute] = useState(null);\n\n  useEffect(() => {\n    const checkIntroStatus = async () => {\n      try {\n        const hasSeenIntro = await AsyncStorage.getItem(\"hasSeenIntro\");\n        setInitialRoute(hasSeenIntro === \"true\" ? \"Login\" : \"Intro\");\n      } catch (error) {\n        console.error(\"Error checking intro status:\", error);\n        setInitialRoute(\"Intro\");\n      }\n    };\n    checkIntroStatus();\n  }, []);\n\n  if (!initialRoute) return null;\n\n  return (\n    <SafeAreaProvider>\n      <NavigationContainer>\n        <AppNavigator initialRoute={initialRoute} />\n        <StatusBar style=\"auto\" />\n      </NavigationContainer>\n    </SafeAreaProvider>\n  );\n}\n"],"mappings":";;AAAA,SAASA,SAAS,QAAQ,iBAAiB;AAC3C,SAASC,gBAAgB,QAAQ,gCAAgC;AACjE,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,OAAOC,YAAY,MAAM,2CAA2C;AACpE,OAAOC,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,YAAY;AAAkC,SAAAC,GAAA,IAAAC,IAAA,EAAAC,IAAA,IAAAC,KAAA;AAErD,eAAe,SAASC,GAAGA,CAAA,EAAG;EAC5B,IAAAC,SAAA,GAAwCP,QAAQ,CAAC,IAAI,CAAC;IAAAQ,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA/CG,YAAY,GAAAF,UAAA;IAAEG,eAAe,GAAAH,UAAA;EAEpCT,SAAS,CAAC,YAAM;IACd,IAAMa,gBAAgB;MAAA,IAAAC,IAAA,GAAAC,iBAAA,CAAG,aAAY;QACnC,IAAI;UACF,IAAMC,YAAY,SAASlB,YAAY,CAACmB,OAAO,CAAC,cAAc,CAAC;UAC/DL,eAAe,CAACI,YAAY,KAAK,MAAM,GAAG,OAAO,GAAG,OAAO,CAAC;QAC9D,CAAC,CAAC,OAAOE,KAAK,EAAE;UACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;UACpDN,eAAe,CAAC,OAAO,CAAC;QAC1B;MACF,CAAC;MAAA,gBARKC,gBAAgBA,CAAA;QAAA,OAAAC,IAAA,CAAAM,KAAA,OAAAC,SAAA;MAAA;IAAA,GAQrB;IACDR,gBAAgB,CAAC,CAAC;EACpB,CAAC,EAAE,EAAE,CAAC;EAEN,IAAI,CAACF,YAAY,EAAE,OAAO,IAAI;EAE9B,OACEP,IAAA,CAACR,gBAAgB;IAAA0B,QAAA,EACfhB,KAAA,CAACT,mBAAmB;MAAAyB,QAAA,GAClBlB,IAAA,CAACF,YAAY;QAACS,YAAY,EAAEA;MAAa,CAAE,CAAC,EAC5CP,IAAA,CAACT,SAAS;QAAC4B,KAAK,EAAC;MAAM,CAAE,CAAC;IAAA,CACP;EAAC,CACN,CAAC;AAEvB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}