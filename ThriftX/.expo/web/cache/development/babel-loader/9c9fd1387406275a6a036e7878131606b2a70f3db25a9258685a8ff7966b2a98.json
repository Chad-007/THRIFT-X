{"ast":null,"code":"import { createStackNavigator } from \"@react-navigation/stack\";\nimport Easing from \"react-native-web/dist/exports/Easing\";\nimport IntroScreen from \"../screens/IntroScreen\";\nimport LoginScreen from \"../screens/LoginScreen\";\nimport SignupScreen from \"../screens/SignupScreen\";\nimport HomeScreen from \"../screens/HomeScreen\";\nimport VehicleDetailScreen from \"../screens/VehicleDetailScreen\";\nimport PostAdScreen from \"../screens/PostAdScreen\";\nimport ProfileScreen from \"../screens/ProfileScreen\";\nimport ChatScreen from \"../screens/ChatScreen\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createStackNavigator();\nvar forPageTransition = function forPageTransition(_ref) {\n  var current = _ref.current,\n    layouts = _ref.layouts;\n  return {\n    cardStyle: {\n      transform: [{\n        translateX: current.progress.interpolate({\n          inputRange: [0, 1],\n          outputRange: [layouts.screen.width, 0]\n        })\n      }],\n      opacity: current.progress.interpolate({\n        inputRange: [0, 0.5, 1],\n        outputRange: [0, 1, 1]\n      })\n    },\n    outgoingCardStyle: {\n      transform: [{\n        translateX: current.progress.interpolate({\n          inputRange: [0, 1],\n          outputRange: [0, -layouts.screen.width]\n        })\n      }],\n      opacity: current.progress.interpolate({\n        inputRange: [0, 0.5, 1],\n        outputRange: [1, 0, 0]\n      })\n    }\n  };\n};\nvar forZoom = function forZoom(_ref2) {\n  var current = _ref2.current,\n    layouts = _ref2.layouts;\n  return {\n    cardStyle: {\n      transform: [{\n        scaleX: current.progress.interpolate({\n          inputRange: [0, 1],\n          outputRange: [0.8, 1]\n        })\n      }, {\n        scaleY: current.progress.interpolate({\n          inputRange: [0, 1],\n          outputRange: [0.8, 1]\n        })\n      }],\n      opacity: current.progress.interpolate({\n        inputRange: [0, 1],\n        outputRange: [0.5, 1]\n      })\n    },\n    outgoingCardStyle: {\n      transform: [{\n        scaleX: current.progress.interpolate({\n          inputRange: [0, 1],\n          outputRange: [1, 0.8]\n        })\n      }, {\n        scaleY: current.progress.interpolate({\n          inputRange: [0, 1],\n          outputRange: [1, 0.8]\n        })\n      }],\n      opacity: current.progress.interpolate({\n        inputRange: [0, 1],\n        outputRange: [1, 0.5]\n      })\n    }\n  };\n};\nvar AppNavigator = function AppNavigator(_ref3) {\n  var initialRoute = _ref3.initialRoute;\n  return _jsxs(Stack.Navigator, {\n    initialRouteName: initialRoute,\n    screenOptions: {\n      gestureEnabled: true,\n      gestureDirection: \"horizontal\",\n      transitionSpec: {\n        open: {\n          animation: \"timing\",\n          config: {\n            duration: 600,\n            easing: Easing.bezier(0.4, 0.1, 0.7, 0.95)\n          }\n        },\n        close: {\n          animation: \"timing\",\n          config: {\n            duration: 600,\n            easing: Easing.bezier(0.4, 0.1, 0.7, 0.95)\n          }\n        }\n      }\n    },\n    children: [_jsx(Stack.Screen, {\n      name: \"Intro\",\n      component: IntroScreen,\n      options: {\n        headerShown: false\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"Login\",\n      component: LoginScreen,\n      options: {\n        headerShown: false,\n        cardStyleInterpolator: forPageTransition\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"Signup\",\n      component: SignupScreen,\n      options: {\n        headerShown: false,\n        cardStyleInterpolator: forPageTransition\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"Home\",\n      component: HomeScreen,\n      options: {\n        headerShown: false,\n        cardStyleInterpolator: forPageTransition\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"VehicleDetail\",\n      component: VehicleDetailScreen,\n      options: {\n        headerShown: false,\n        cardStyleInterpolator: forPageTransition\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"PostAd\",\n      component: PostAdScreen,\n      options: {\n        headerShown: false,\n        cardStyleInterpolator: forPageTransition\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"Profile\",\n      component: ProfileScreen,\n      options: {\n        headerShown: false,\n        cardStyleInterpolator: forPageTransition\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"Chat\",\n      component: ChatScreen,\n      options: {\n        headerShown: false,\n        cardStyleInterpolator: forPageTransition\n      }\n    })]\n  });\n};\nexport default AppNavigator;","map":{"version":3,"names":["createStackNavigator","Easing","IntroScreen","LoginScreen","SignupScreen","HomeScreen","VehicleDetailScreen","PostAdScreen","ProfileScreen","ChatScreen","jsx","_jsx","jsxs","_jsxs","Stack","forPageTransition","_ref","current","layouts","cardStyle","transform","translateX","progress","interpolate","inputRange","outputRange","screen","width","opacity","outgoingCardStyle","forZoom","_ref2","scaleX","scaleY","AppNavigator","_ref3","initialRoute","Navigator","initialRouteName","screenOptions","gestureEnabled","gestureDirection","transitionSpec","open","animation","config","duration","easing","bezier","close","children","Screen","name","component","options","headerShown","cardStyleInterpolator"],"sources":["/home/alan/Desktop/ThriftX/navigation/AppNavigator.js"],"sourcesContent":["import { createStackNavigator } from \"@react-navigation/stack\";\nimport { Easing } from \"react-native\";\nimport IntroScreen from \"../screens/IntroScreen\";\nimport LoginScreen from \"../screens/LoginScreen\";\nimport SignupScreen from \"../screens/SignupScreen\";\nimport HomeScreen from \"../screens/HomeScreen\";\nimport VehicleDetailScreen from \"../screens/VehicleDetailScreen\";\nimport PostAdScreen from \"../screens/PostAdScreen\";\nimport ProfileScreen from \"../screens/ProfileScreen\";\nimport ChatScreen from \"../screens/ChatScreen\";\n\nconst Stack = createStackNavigator();\n\nconst forPageTransition = ({ current, layouts }) => ({\n  cardStyle: {\n    transform: [\n      {\n        translateX: current.progress.interpolate({\n          inputRange: [0, 1],\n          outputRange: [layouts.screen.width, 0],\n        }),\n      },\n    ],\n    opacity: current.progress.interpolate({\n      inputRange: [0, 0.5, 1],\n      outputRange: [0, 1, 1],\n    }),\n  },\n  outgoingCardStyle: {\n    transform: [\n      {\n        translateX: current.progress.interpolate({\n          inputRange: [0, 1],\n          outputRange: [0, -layouts.screen.width],\n        }),\n      },\n    ],\n    opacity: current.progress.interpolate({\n      inputRange: [0, 0.5, 1],\n      outputRange: [1, 0, 0],\n    }),\n  },\n});\n\nconst forZoom = ({ current, layouts }) => ({\n  cardStyle: {\n    transform: [\n      {\n        scaleX: current.progress.interpolate({\n          inputRange: [0, 1],\n          outputRange: [0.8, 1],\n        }),\n      },\n      {\n        scaleY: current.progress.interpolate({\n          inputRange: [0, 1],\n          outputRange: [0.8, 1],\n        }),\n      },\n    ],\n    opacity: current.progress.interpolate({\n      inputRange: [0, 1],\n      outputRange: [0.5, 1],\n    }),\n  },\n  outgoingCardStyle: {\n    transform: [\n      {\n        scaleX: current.progress.interpolate({\n          inputRange: [0, 1],\n          outputRange: [1, 0.8],\n        }),\n      },\n      {\n        scaleY: current.progress.interpolate({\n          inputRange: [0, 1],\n          outputRange: [1, 0.8],\n        }),\n      },\n    ],\n    opacity: current.progress.interpolate({\n      inputRange: [0, 1],\n      outputRange: [1, 0.5],\n    }),\n  },\n});\n\nconst AppNavigator = ({ initialRoute }) => (\n  <Stack.Navigator\n    initialRouteName={initialRoute}\n    screenOptions={{\n      gestureEnabled: true,\n      gestureDirection: \"horizontal\",\n      transitionSpec: {\n        open: {\n          animation: \"timing\",\n          config: { duration: 600, easing: Easing.bezier(0.4, 0.1, 0.7, 0.95) },\n        },\n        close: {\n          animation: \"timing\",\n          config: { duration: 600, easing: Easing.bezier(0.4, 0.1, 0.7, 0.95) },\n        },\n      },\n    }}\n  >\n    <Stack.Screen\n      name=\"Intro\"\n      component={IntroScreen}\n      options={{ headerShown: false }}\n    />\n    <Stack.Screen\n      name=\"Login\"\n      component={LoginScreen}\n      options={{ headerShown: false, cardStyleInterpolator: forPageTransition }}\n    />\n    <Stack.Screen\n      name=\"Signup\"\n      component={SignupScreen}\n      options={{ headerShown: false, cardStyleInterpolator: forPageTransition }}\n    />\n    <Stack.Screen\n      name=\"Home\"\n      component={HomeScreen}\n      options={{ headerShown: false, cardStyleInterpolator: forPageTransition }}\n    />\n    <Stack.Screen\n      name=\"VehicleDetail\"\n      component={VehicleDetailScreen}\n      options={{ headerShown: false, cardStyleInterpolator: forPageTransition }}\n    />\n    <Stack.Screen\n      name=\"PostAd\"\n      component={PostAdScreen}\n      options={{ headerShown: false, cardStyleInterpolator: forPageTransition }}\n    />\n    <Stack.Screen\n      name=\"Profile\"\n      component={ProfileScreen}\n      options={{ headerShown: false, cardStyleInterpolator: forPageTransition }}\n    />\n    <Stack.Screen\n      name=\"Chat\"\n      component={ChatScreen}\n      options={{ headerShown: false, cardStyleInterpolator: forPageTransition }}\n    />\n  </Stack.Navigator>\n);\n\nexport default AppNavigator;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}